
import sqlite3 as sqlite

from gi.repository import Gtk,GObject
from threading import Thread
from notifylib.add_url import Add_Series
from notifylib.about import About
from notifylib.confirm import Confirm
from notifylib.create_tree_view import create_parent
from notifylib.update import update_movie_series

GObject.threads_init()


class Main:
    """Main Page for letmenotifyu"""
    def __init__(self,gladefile,pic,db):
        self.connect=sqlite.connect(db)
        self.cur=self.connect.cursor()
        self.builder=Gtk.Builder()
        self.builder.add_from_file(gladefile)
        signals={'on_winlet_destroy':self.on_winlet_destroy,
                 'on_imageAdd_activate':self.on_imageAdd_activate,
                 'on_imageQuit_destroy':self.on_imageQuit_destroy,
                 'on_imageAbout_activate':self.on_imageAbout_activate,
                 'on_Movies_button_press_event':self.on_Movies_button_press_event}
        self.builder.connect_signals(signals)
        self.treeviewMovies=self.builder.get_object('treeviewMovies')
        self.builder.get_object('notebook1').set_current_page(2)
        self.window=self.builder.get_object('winlet')
        self.window.show()
        Gtk.main()

    def on_winlet_destroy(self,widget):
        self.connect.close()
        Gtk.main_quit()

    def on_imageAdd_activate(self,widget):
        Add_Series('input7.glade',self.cur,self.connect)

    def on_imageQuit_destroy(self,widget):
        self.connect.close()
        Gtk.main_quit()

    def on_imageAbout_activate(self,widget):
        About('about7.glade')

    def on_Movies_button_press_event(self,widget):
        print("OK")
        print(self.builder.get_object('notebook1').get_current_page())
        self.builder.get_object('listMovies').clear()
        self.cur.execute('SELECT title FROM movies')
        for title in self.cur.fetchall():
            self.builder.get_object('listMovies').append(title[0])
            
